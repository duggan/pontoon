environment:

  global:

    MOCK: "1"
    PIP_DOWNLOAD_CACHE : "C\\PIP_DOWNLOAD_CACHE"

  matrix:

    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.
    # See: http://www.appveyor.com/docs/installed-software#python

    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x" # currently 2.7.9
      PYTHON_ARCH: "32"
      TOXENV: "py27,lib,coverage"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x" # currently 2.7.9
      PYTHON_ARCH: "64"
      TOXENV: "py27,lib,coverage"

    - PYTHON: "C:\\Python33"
      PYTHON_VERSION: "3.3.x" # currently 3.3.5
      PYTHON_ARCH: "32"
      TOXENV: "py33,lib,coverage"

    - PYTHON: "C:\\Python33-x64"
      PYTHON_VERSION: "3.3.x" # currently 3.3.5
      PYTHON_ARCH: "64"
      TOXENV: "py33,lib,coverage"

    - PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4.x" # currently 3.4.3
      PYTHON_ARCH: "32"
      TOXENV: "py34,lib,coverage"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.x" # currently 3.4.3
      PYTHON_ARCH: "64"
      TOXENV: "py34,lib,coverage"

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.x" # currently 3.4.3
      PYTHON_ARCH: "32"
      TOXENV: "py35,lib,coverage"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x" # currently 3.4.3
      PYTHON_ARCH: "64"
      TOXENV: "py35,lib,coverage"

    # Python versions not pre-installed

    # Python 2.6.6 is the latest Python 2.6 with a Windows installer
    # See: https://github.com/ogrisel/python-appveyor-demo/issues/10

    - PYTHON: "C:\\Python266"
      PYTHON_VERSION: "2.6.6"
      PYTHON_ARCH: "32"
      TOXENV: "py26,lib,coverage"

    - PYTHON: "C:\\Python266-x64"
      PYTHON_VERSION: "2.6.6"
      PYTHON_ARCH: "64"
      TOXENV: "py26,lib,coverage"

install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  # Workaround for failing builds on Python 3.x 64 bit (taken from SpiceyPy project)
  - IF "%PYTHON_ARCH%"=="32" (call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x86) ELSE (ECHO "probably a 64bit build")
  - IF "%PYTHON_ARCH%"=="64" (call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64) ELSE (ECHO "probably a 32bit build")

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"

  # Install the build dependencies of the project.
  - "pip install tox"

build: off

test_script:
  # Run the project tests
  - "tox"

after_test:
  # If tests are successful, create binary packages for the project.
  - "pip install wheel"
  - "python setup.py bdist_wheel"
  - "python setup.py bdist_wininst"
  - "python setup.py bdist_msi"
  - ps: "ls dist"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
